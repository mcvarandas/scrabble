#Combine these two lists into a dictionary that would map a letter to its point value
letters = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
points = [1, 3, 3, 2, 1, 4, 2, 4, 1, 8, 5, 1, 3, 4, 1, 3, 10, 1, 1, 1, 1, 4, 4, 8, 4, 10]

letter_to_points = {letter: point for letter, point in zip(letters, points)}


#Add an element to the letter_to_points dictionary that has a key of " " and a point value of 0 to take into account blank tiles
letter_to_points[" "] = 0

#Create a function that will take in a word and return how many points it's worth
def score_word(word):
  point_total = 0
  for letter in word:
    point_total += letter_to_points.get(letter, 0)
  return point_total

#Test the score_word(word) function
brownie_points = score_word("BROWNIE")
print(brownie_points)

#Create a dictionary that maps players to a list of the words they have played
player_to_words = {"player1": ["BLUE", "TENNIS", "EXIT"], "wordNerd": ["EARTH", "EYES", "MACHINE"], "Lexi Con": ["ERASER", "BELLY", "HUSKY"], "Prof Reader": ["ZAP", "COMA", "PERIOD"]}

#Define a function that computes each player's score
player_to_points = {}
def update_point_totals():
  for player in player_to_words:
    words = player_to_words.get(player)
    player_points = 0
    for word in words:
      player_points += score_word(word) 
    player_to_points[player] = player_points
  return player_to_points

todaysgame = update_point_totals()
print(todaysgame)

#EXTENDED PRACTICE
#Define a function that would take in a player and a word, and add that word to the list of words theyâ€™ve played
words_played = {}
def play_word(player, word):
  if player not in words_played:
    words_played[player] = []
  words_played[player].append(word)
  return words_played

round1 = play_word("player1", "BLUE")
print(round1)
round2 = play_word("player1", "TENNIS")
print(round2)

#Make your letter_to_points dictionary able to handle lowercase inputs as well
letter_to_points.update({letter.lower(): point for letter, point in zip(letters, points)})
